{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\nimport { Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../core/services/user.service\";\nimport * as i3 from \"@angular/forms\";\nexport class SettingsComponent {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n    this.settingsForm = new FormGroup({\n      image: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      username: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      bio: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      email: new FormControl(\"\", {\n        nonNullable: true\n      }),\n      password: new FormControl(\"\", {\n        validators: [Validators.required],\n        nonNullable: true\n      })\n    });\n    this.errors = null;\n    this.isSubmitting = false;\n    this.destroy$ = new Subject();\n  }\n  ngOnInit() {\n    this.settingsForm.patchValue(this.userService.getCurrentUser());\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  logout() {\n    this.userService.logout();\n  }\n  submitForm() {\n    this.isSubmitting = true;\n    this.userService.update(this.settingsForm.value).pipe(takeUntil(this.destroy$)).subscribe({\n      next: ({\n        user\n      }) => void this.router.navigate([\"/profile/\", user.username]),\n      error: err => {\n        this.errors = err;\n        this.isSubmitting = false;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function SettingsComponent_Factory(t) {\n    return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsComponent,\n    selectors: [[\"app-settings-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 25,\n    vars: 3,\n    consts: [[1, \"settings-page\"], [1, \"container\", \"page\"], [1, \"row\"], [1, \"col-md-6\", \"offset-md-3\", \"col-xs-12\"], [1, \"text-xs-center\"], [3, \"errors\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"disabled\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"URL of profile picture\", \"formControlName\", \"image\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"form-control\", \"form-control-lg\"], [\"rows\", \"8\", \"placeholder\", \"Short bio about you\", \"formControlName\", \"bio\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"password\", \"placeholder\", \"New Password\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"pull-xs-right\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"]],\n    template: function SettingsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \"Your Settings\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"app-list-errors\", 5);\n        i0.ɵɵelementStart(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(8, \"fieldset\", 7)(9, \"fieldset\", 8);\n        i0.ɵɵelement(10, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"fieldset\", 8);\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"fieldset\", 8)(14, \"textarea\", 11);\n        i0.ɵɵtext(15, \"              \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"fieldset\", 8);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"fieldset\", 8);\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \" Update Settings \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(22, \"hr\");\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function SettingsComponent_Template_button_click_23_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(24, \" Or click here to logout. \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"errors\", ctx.errors);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.settingsForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitting);\n      }\n    },\n    dependencies: [ListErrorsComponent, ReactiveFormsModule, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","ReactiveFormsModule","Validators","ListErrorsComponent","Subject","takeUntil","SettingsComponent","constructor","router","userService","settingsForm","image","nonNullable","username","bio","email","password","validators","required","errors","isSubmitting","destroy$","ngOnInit","patchValue","getCurrentUser","ngOnDestroy","next","complete","logout","submitForm","update","value","pipe","subscribe","user","navigate","error","err","_","i0","ɵɵdirectiveInject","i1","Router","i2","UserService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SettingsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SettingsComponent_Template_form_ngSubmit_7_listener","SettingsComponent_Template_button_click_23_listener","ɵɵadvance","ɵɵproperty","i3","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sources":["C:\\Users\\javie\\KarateGit\\myproject\\src\\app\\features\\settings\\settings.component.ts","C:\\Users\\javie\\KarateGit\\myproject\\src\\app\\features\\settings\\settings.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { User } from \"../../core/models/user.model\";\r\nimport { UserService } from \"../../core/services/user.service\";\r\nimport { ListErrorsComponent } from \"../../shared/list-errors.component\";\r\nimport { Errors } from \"../../core/models/errors.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { takeUntil } from \"rxjs/operators\";\r\n\r\ninterface SettingsForm {\r\n  image: FormControl<string>;\r\n  username: FormControl<string>;\r\n  bio: FormControl<string>;\r\n  email: FormControl<string>;\r\n  password: FormControl<string>;\r\n}\r\n\r\n@Component({\r\n  selector: \"app-settings-page\",\r\n  templateUrl: \"./settings.component.html\",\r\n  imports: [ListErrorsComponent, ReactiveFormsModule],\r\n  standalone: true,\r\n})\r\nexport class SettingsComponent implements OnInit, OnDestroy {\r\n  user!: User;\r\n  settingsForm = new FormGroup<SettingsForm>({\r\n    image: new FormControl(\"\", { nonNullable: true }),\r\n    username: new FormControl(\"\", { nonNullable: true }),\r\n    bio: new FormControl(\"\", { nonNullable: true }),\r\n    email: new FormControl(\"\", { nonNullable: true }),\r\n    password: new FormControl(\"\", {\r\n      validators: [Validators.required],\r\n      nonNullable: true,\r\n    }),\r\n  });\r\n  errors: Errors | null = null;\r\n  isSubmitting = false;\r\n  destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private readonly userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.settingsForm.patchValue(\r\n      this.userService.getCurrentUser() as Partial<User>\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  logout(): void {\r\n    this.userService.logout();\r\n  }\r\n\r\n  submitForm() {\r\n    this.isSubmitting = true;\r\n\r\n    this.userService\r\n      .update(this.settingsForm.value)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: ({ user }) =>\r\n          void this.router.navigate([\"/profile/\", user.username]),\r\n        error: (err) => {\r\n          this.errors = err;\r\n          this.isSubmitting = false;\r\n        },\r\n      });\r\n  }\r\n}\r\n","<div class=\"settings-page\">\r\n  <div class=\"container page\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 offset-md-3 col-xs-12\">\r\n        <h1 class=\"text-xs-center\">Your Settings</h1>\r\n\r\n        <app-list-errors [errors]=\"errors\"></app-list-errors>\r\n\r\n        <form [formGroup]=\"settingsForm\" (ngSubmit)=\"submitForm()\">\r\n          <fieldset [disabled]=\"isSubmitting\">\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"URL of profile picture\"\r\n                formControlName=\"image\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                formControlName=\"username\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <textarea\r\n                class=\"form-control form-control-lg\"\r\n                rows=\"8\"\r\n                placeholder=\"Short bio about you\"\r\n                formControlName=\"bio\"\r\n              >\r\n              </textarea>\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                formControlName=\"email\"\r\n              />\r\n            </fieldset>\r\n\r\n            <fieldset class=\"form-group\">\r\n              <input\r\n                class=\"form-control form-control-lg\"\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                formControlName=\"password\"\r\n              />\r\n            </fieldset>\r\n\r\n            <button class=\"btn btn-lg btn-primary pull-xs-right\" type=\"submit\">\r\n              Update Settings\r\n            </button>\r\n          </fieldset>\r\n        </form>\r\n\r\n        <!-- Line break for logout button -->\r\n        <hr />\r\n\r\n        <button class=\"btn btn-outline-danger\" (click)=\"logout()\">\r\n          Or click here to logout.\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}