[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def dbHandler = Java.type('helpers.DbHandler')","result":{"duration":0,"error_message":">> classpath:conduitApp\/feature\/WorkWithDb.feature:7\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 1046, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1046, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:4","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4},{"name":"helpers\/CreateToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":4},{"name":"url apiUrl","result":{"duration":1782500,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":4},{"name":"path 'users\/login'","result":{"duration":722600,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":5},{"name":"request {\"user\": {\"email\": \"#(userEmail)\", \"password\": \"#(userPassword)\"}}","result":{"duration":30336900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":6},{"name":"method Post","result":{"duration":1765392900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":7},{"name":"status 200","result":{"duration":7951100,"error_message":"status code was: 403, expected: 200, response time in milliseconds: 1046, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":8},{"name":"def authToken = response.user.token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":9}]},{"start_timestamp":"2024-01-10T00:18:27.433Z","line":7,"name":"Seed database with a new job","description":"","id":"seed-database-with-a-new-job","type":"scenario","keyword":"Scenario","steps":[{"name":"eval dbHandler.addNewProduct(\"AA\")","result":{"duration":0,"error_message":">> classpath:conduitApp\/feature\/WorkWithDb.feature:7\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 1046, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 1046, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/WorkWithDb.feature:4\nclasspath:conduitApp\/feature\/WorkWithDb.feature:8","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8}],"tags":[{"name":"@debug","line":6}]}],"name":"conduitApp\/feature\/WorkWithDb.feature","description":"Work with DB","id":"work-with-db","keyword":"Feature","uri":"conduitApp\/feature\/WorkWithDb.feature"}]