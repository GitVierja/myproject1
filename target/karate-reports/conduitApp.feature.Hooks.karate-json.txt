{"failedCount":2,"prefixedPath":"classpath:conduitApp\/feature\/Hooks.feature","packageQualifiedName":"conduitApp.feature.Hooks","loopIndex":-1,"relativePath":"conduitApp\/feature\/Hooks.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:19\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6","startTime":1704851008626,"endTime":1704851008626,"millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":0,"text":"def result = callonce read('classpath:helpers\/Dummy.feature')"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:19\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8","startTime":1704851008626,"endTime":1704851008626,"millis":0.0,"status":"failed"},"step":{"comments":["#callonce mantiene el mismo nombre. call ejecuta el metodo cada vez que inicia"],"background":true,"line":8,"prefix":"*","index":1,"text":"def username = result.username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:19\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:20","startTime":1704851008626,"endTime":1704851008626,"millis":0.0,"status":"failed"},"step":{"line":20,"prefix":"*","index":0,"text":"print username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:19\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:20\nclasspath:conduitApp\/feature\/Hooks.feature:21","startTime":1704851008626,"endTime":1704851008626,"millis":0.0,"status":"failed"},"step":{"line":21,"prefix":"*","index":1,"text":"print 'This is first scenario'"}}],"line":19,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Hooks.feature:19\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:20\nclasspath:conduitApp\/feature\/Hooks.feature:21","executorName":"main","name":"First scenario","startTime":1704851008623,"refId":"[1:19]","endTime":1704851008626,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:23\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6","startTime":1704851008636,"endTime":1704851008636,"millis":0.0,"status":"failed"},"step":{"background":true,"line":6,"prefix":"*","index":0,"text":"def result = callonce read('classpath:helpers\/Dummy.feature')"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:23\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8","startTime":1704851008636,"endTime":1704851008636,"millis":0.0,"status":"failed"},"step":{"comments":["#callonce mantiene el mismo nombre. call ejecuta el metodo cada vez que inicia"],"background":true,"line":8,"prefix":"*","index":1,"text":"def username = result.username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:23\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:24","startTime":1704851008636,"endTime":1704851008636,"millis":0.0,"status":"failed"},"step":{"line":24,"prefix":"*","index":0,"text":"print username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:23\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:24\nclasspath:conduitApp\/feature\/Hooks.feature:25","startTime":1704851008636,"endTime":1704851008636,"millis":0.0,"status":"failed"},"step":{"line":25,"prefix":"*","index":1,"text":"print 'This is second scenario'"}}],"line":23,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Hooks.feature:23\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 740, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:6\nclasspath:conduitApp\/feature\/Hooks.feature:8\nclasspath:conduitApp\/feature\/Hooks.feature:24\nclasspath:conduitApp\/feature\/Hooks.feature:25","executorName":"main","name":"Second scenario","startTime":1704851008634,"refId":"[2:23]","endTime":1704851008636,"exampleIndex":-1}],"callDepth":0,"name":"Hooks","description":"","resultDate":"2024-01-09 10:43:28 p. m.","durationMillis":0.0,"passedCount":0}