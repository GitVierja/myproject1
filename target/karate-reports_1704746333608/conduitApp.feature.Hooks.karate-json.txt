{"failedCount":2,"prefixedPath":"classpath:conduitApp\/feature\/Hooks.feature","packageQualifiedName":"conduitApp.feature.Hooks","loopIndex":-1,"relativePath":"conduitApp\/feature\/Hooks.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:20\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7","startTime":1704746307812,"endTime":1704746307812,"millis":0.0,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":0,"text":"def result = callonce read('classpath:helpers\/Dummy.feature')"},"callResults":[{"prefixedPath":"classpath:helpers\/CreateToken.feature","loopIndex":-1,"callDepth":1,"description":"","resultDate":"2024-01-08 05:38:27 p.Â m.","durationMillis":1452.5129,"callArg":{"apiUrl":"https:\/\/api.realworld.io\/api\/","userEmail":"javierkarate1@test.com","userPassword":"karate1234"},"failedCount":1,"packageQualifiedName":"helpers.CreateToken","relativePath":"helpers\/CreateToken.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":1103600,"startTime":1704746306338,"endTime":1704746306339,"millis":1.1036,"status":"passed"},"step":{"line":4,"prefix":"Given","index":0,"text":"url apiUrl"}},{"result":{"nanos":736900,"startTime":1704746306342,"endTime":1704746306343,"millis":0.7369,"status":"passed"},"step":{"line":5,"prefix":"Given","index":1,"text":"path 'users\/login'"}},{"result":{"nanos":16900300,"startTime":1704746306343,"endTime":1704746306360,"millis":16.9003,"status":"passed"},"step":{"line":6,"prefix":"And","index":2,"text":"request {\"user\": {\"email\": \"#(userEmail)\", \"password\": \"#(userPassword)\"}}"}},{"result":{"nanos":1430041300,"startTime":1704746306360,"endTime":1704746307790,"millis":1430.0413,"status":"passed"},"step":{"line":7,"prefix":"When","index":3,"text":"method Post"}},{"result":{"nanos":3730800,"errorMessage":"status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8","startTime":1704746307790,"endTime":1704746307794,"millis":3.7308,"status":"failed"},"step":{"line":8,"prefix":"Then","index":4,"text":"status 200"}},{"result":{"nanos":0,"startTime":1704746307796,"endTime":1704746307796,"millis":0.0,"status":"skipped"},"step":{"line":9,"prefix":"*","index":5,"text":"def authToken = response.user.token"}}],"line":3,"description":"","durationMillis":1452.5129,"failed":true,"error":"status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8","executorName":"main","name":"Create token","startTime":1704746306330,"refId":"[1:3]","endTime":1704746307796,"exampleIndex":-1}],"name":"Create token","passedCount":0}]},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:20\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9","startTime":1704746307812,"endTime":1704746307812,"millis":0.0,"status":"failed"},"step":{"comments":["#callonce mantiene el mismo nombre. call ejecuta el metodo cada vez que inicia"],"background":true,"line":9,"prefix":"*","index":1,"text":"def username = result.username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:20\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:21","startTime":1704746307813,"endTime":1704746307813,"millis":0.0,"status":"failed"},"step":{"line":21,"prefix":"*","index":0,"text":"print username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:20\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:21\nclasspath:conduitApp\/feature\/Hooks.feature:22","startTime":1704746307813,"endTime":1704746307813,"millis":0.0,"status":"failed"},"step":{"line":22,"prefix":"*","index":1,"text":"print 'This is first scenario'"}}],"line":20,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Hooks.feature:20\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:21\nclasspath:conduitApp\/feature\/Hooks.feature:22","tags":["debug"],"executorName":"main","name":"First scenario","startTime":1704746306234,"refId":"[1:20]","endTime":1704746307813,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:24\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7","startTime":1704746307823,"endTime":1704746307823,"millis":0.0,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":0,"text":"def result = callonce read('classpath:helpers\/Dummy.feature')"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:24\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9","startTime":1704746307823,"endTime":1704746307823,"millis":0.0,"status":"failed"},"step":{"comments":["#callonce mantiene el mismo nombre. call ejecuta el metodo cada vez que inicia"],"background":true,"line":9,"prefix":"*","index":1,"text":"def username = result.username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:24\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:25","startTime":1704746307823,"endTime":1704746307823,"millis":0.0,"status":"failed"},"step":{"line":25,"prefix":"*","index":0,"text":"print username"}},{"result":{"nanos":0,"errorMessage":">> classpath:conduitApp\/feature\/Hooks.feature:24\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:25\nclasspath:conduitApp\/feature\/Hooks.feature:26","startTime":1704746307823,"endTime":1704746307823,"millis":0.0,"status":"failed"},"step":{"line":26,"prefix":"*","index":1,"text":"print 'This is second scenario'"}}],"line":24,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:conduitApp\/feature\/Hooks.feature:24\n>> karate-config.js failed\n>> status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \/\/ get system property 'karate.env'\n03:   karate.log('karate.env system property was:', env);\n04:   if (!env) {\n05:     env = 'dev';\n06:   }\n07:   var config = {\n08:     \n09:     apiUrl: 'https:\/\/api.realworld.io\/api\/'\n10:   }\n11:   if (env == 'dev') {\n12:     \n13:     config.userEmail = 'javierkarate1@test.com'\n14:     config.userPassword = 'karate1234'\n15: \n16:   } if (env == 'qa') {\n17: \n18:     config.userEmail = 'javierkarate2@test.com'\n19:     config.userPassword = 'karate1234'\n20:   }\n21: \n22:   var accesToken = karate.callSingle('classpath:helpers\/CreateToken.feature', config).authToken\n23:   karate.configure('headers',{Authorization: 'Token ' + accesToken})\n24:   \n25: \n26:   return config;\n27: }\n<<<<\norg.graalvm.polyglot.PolyglotException: status code was: 403, expected: 200, response time in milliseconds: 877, url: https:\/\/api.realworld.io\/api\/users\/login, response: \n{\"errors\":{\"email or password\":[\"is invalid\"]}}\nclasspath:helpers\/CreateToken.feature:8\n- com.intuit.karate.core.ScenarioBridge.callSingle(ScenarioBridge.java:241)\n- <js>.fn(Unnamed:22)\n\nclasspath:conduitApp\/feature\/Hooks.feature:7\nclasspath:conduitApp\/feature\/Hooks.feature:9\nclasspath:conduitApp\/feature\/Hooks.feature:25\nclasspath:conduitApp\/feature\/Hooks.feature:26","tags":["debug"],"executorName":"main","name":"Second scenario","startTime":1704746307820,"refId":"[2:24]","endTime":1704746307823,"exampleIndex":-1}],"callDepth":0,"name":"Hooks","description":"","resultDate":"2024-01-08 05:38:27 p.Â m.","durationMillis":0.0,"passedCount":0}